pipeline {
  agent any
  options { timestamps(); ansiColor('xterm') }

  environment {
    COMPOSE_PROJECT    = 'bbp'
    DEPLOY_COMPOSE_APP = '/workspace/deploy/docker-compose-app.yml'
    APP_NAME           = 'grooming-web'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[url: 'https://github.com/bossodiz/grooming-web.git']]
        ])
      }
    }

    stage('Compute Tag') {
      steps {
        script {
          def short = sh(script: "git rev-parse --short=7 HEAD", returnStdout:true).trim()
          def dt    = sh(script: "date +%Y%m%d-%H%M%S", returnStdout:true).trim()
          env.IMG_TAG = "${dt}-${short}"
        }
      }
    }

    stage('Build & Push Docker') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds',
                                          usernameVariable: 'DOCKER_USER',
                                          passwordVariable: 'DOCKER_PASS')]) {
          sh '''
            set -e
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

            IMAGE="$DOCKER_USER/${APP_NAME}:${IMG_TAG}"
            LATEST="$DOCKER_USER/${APP_NAME}:latest"

            docker build --pull -t "$IMAGE" -t "$LATEST" -f Dockerfile .
            docker push "$IMAGE"
            docker push "$LATEST"
          '''
        }
      }
    }

    stage('Deploy (web)') {
      steps {
        sh '''
          set -e
          docker compose -p ${COMPOSE_PROJECT} -f ${DEPLOY_COMPOSE_APP} pull web
          docker compose -p ${COMPOSE_PROJECT} -f ${DEPLOY_COMPOSE_APP} up -d web
        '''
      }
    }
  }
}
